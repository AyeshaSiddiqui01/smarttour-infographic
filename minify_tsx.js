const fs=require("fs");const path=require("path");const tsxFiles=["SmartTourismInfographic.tsx","components/VisualProblemStatement.tsx","components/ParetoAnalysisSection.tsx","components/ConclusionSection.tsx","components/LimitationsSection.tsx","pages/index.tsx","pages/_app.tsx"];!fs.existsSync("minified")&&fs.mkdirSync("minified");!fs.existsSync("minified/components")&&fs.mkdirSync("minified/components");!fs.existsSync("minified/pages")&&fs.mkdirSync("minified/pages");function minifyTSX(code){return code.replace(/\/\*[\s\S]*?\*\/|\/\/.*/g,"").replace(/\s+/g," ").replace(/\s*([=+\-*\/%&|^<>!?:;,{}()[\]])\s*/g,"$1").replace(/(return|import|export|const|let|var|function|class|extends|implements|instanceof|typeof|throw|case|new|void)\s+/g,"$1 ").replace(/(if|for|while|switch|catch|with)\(/g,"$1 (").replace(/>\s+</g,"><").replace(/{\s+/g,"{").replace(/\s+}/g,"}")}tsxFiles.forEach(file=>{try{console.log(`Processing ${file}...`);const content=fs.readFileSync(file,"utf8");const minified=minifyTSX(content);fs.writeFileSync(`minified/${file}`,minified);console.log(`Minified ${file}`)}catch(e){console.error(`Error processing ${file}: ${e.message}`)}});console.log("All files have been minified!")
